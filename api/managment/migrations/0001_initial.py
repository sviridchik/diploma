# Generated by Django 3.2.16 on 2022-12-17 04:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('specialty', models.CharField(blank=True, choices=[('endocrinologist', 'endocrinologist'), ('neurologist', 'neurologist'), ('therapist', 'therapist'), ('cardiologist', 'cardiologist'), ('ophthalmologist', 'ophthalmologist'), ('nutritionist', 'nutritionist'), ('surgeon', 'surgeon')], max_length=150, verbose_name='specialty')),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('age', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(150)], verbose_name='age')),
                ('phone', models.BigIntegerField(blank=True, default=0, unique=True, verbose_name='phone')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tranzaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill', models.CharField(max_length=255, verbose_name='bill')),
                ('date', models.DateTimeField(verbose_name='date_start')),
                ('method', models.CharField(max_length=255, verbose_name='billing method')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='managment.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Tokens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, verbose_name='action')),
                ('date', models.DateTimeField(verbose_name='date')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='managment.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=12, max_digits=20, verbose_name='price')),
                ('date', models.DateTimeField(verbose_name='date_start')),
                ('duration_days', models.PositiveIntegerField(verbose_name='duration_days')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='managment.patient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(choices=[('w', 'white'), ('b', 'blue'), ('r', 'red'), ('o', 'orange'), ('g', 'green')], default='white', max_length=255, verbose_name='color')),
                ('font', models.IntegerField(verbose_name='font')),
                ('city', models.CharField(max_length=255, verbose_name='city')),
                ('language', models.CharField(choices=[('RU', 'RUSSIAN'), ('EN', 'ENGLISH')], max_length=255, verbose_name='language')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='managment.patient', verbose_name='patient')),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banned', models.BooleanField(blank=True, help_text='Был ли он забанен опекуном через администратора', null=True, verbose_name='banned')),
                ('is_send', models.BooleanField(blank=True, default=False, help_text='отправлять ли отчеты об опекуне', null=True, verbose_name='is_send')),
                ('relationship', models.CharField(blank=True, help_text='родство с опекуном', max_length=150, null=True, verbose_name='relationship')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('phone', models.BigIntegerField(blank=True, default=0, unique=True, verbose_name='phone')),
                ('care_about', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='managment.patient', verbose_name='care about')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DoctorVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='date_start')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='managment.doctor')),
                ('user', models.ManyToManyField(to='managment.Patient')),
            ],
        ),
    ]
