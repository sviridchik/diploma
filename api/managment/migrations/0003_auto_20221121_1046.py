# Generated by Django 3.2.16 on 2022-11-21 10:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('managment', '0002_alter_patient_care_about'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_attended', models.PositiveIntegerField(verbose_name='days_attended')),
                ('days_no_miss', models.PositiveIntegerField(verbose_name='days_no_miss')),
                ('number_in_time', models.PositiveIntegerField(verbose_name='number_in_time')),
                ('praise_from_guard', models.PositiveIntegerField(help_text='количество раз похвалы', verbose_name='praise_from_guard')),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banned', models.BooleanField(help_text='Был ли он забанен опекуном через администратора', verbose_name='banned')),
                ('is_send', models.BooleanField(help_text='отправлять ли отчеты об опекуне', verbose_name='is_send')),
                ('relationship', models.CharField(blank=True, help_text='родство с опекуном', max_length=150, verbose_name='relationship')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('phone', models.BigIntegerField(blank=True, default=0, unique=True, verbose_name='phone')),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
            ],
        ),
        migrations.CreateModel(
            name='Tariff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=12, max_digits=20, verbose_name='price')),
                ('date', models.DateTimeField(verbose_name='date_start')),
                ('duration_days', models.PositiveIntegerField(verbose_name='duration_days')),
            ],
        ),
        migrations.CreateModel(
            name='Tokens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=255, verbose_name='action')),
                ('date', models.DateTimeField(verbose_name='date')),
            ],
        ),
        migrations.CreateModel(
            name='Tranzaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill', models.CharField(max_length=255, verbose_name='acbilltion')),
                ('date', models.DateTimeField(verbose_name='date_start')),
                ('method', models.CharField(max_length=255, verbose_name='billing method')),
            ],
        ),
        migrations.RemoveField(
            model_name='reportdot',
            name='report',
        ),
        migrations.RemoveField(
            model_name='patient',
            name='care_about',
        ),
        migrations.RemoveField(
            model_name='patient',
            name='is_staff',
        ),
        migrations.DeleteModel(
            name='Report',
        ),
        migrations.DeleteModel(
            name='ReportDot',
        ),
        migrations.AddField(
            model_name='tranzaction',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='managment.patient'),
        ),
        migrations.AddField(
            model_name='tokens',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='managment.patient'),
        ),
        migrations.AddField(
            model_name='tariff',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='managment.patient'),
        ),
        migrations.AddField(
            model_name='label',
            name='user',
            field=models.ManyToManyField(to='managment.Patient'),
        ),
        migrations.AddField(
            model_name='guardian',
            name='care_about',
            field=models.ManyToManyField(blank=True, null=True, to='managment.Patient', verbose_name='care about'),
        ),
        migrations.AddField(
            model_name='guardian',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='achievement',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='managment.patient'),
        ),
    ]
